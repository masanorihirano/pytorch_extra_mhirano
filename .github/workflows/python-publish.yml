# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
name: release

on:
  create:
    tags:
    - "*.*.*"

jobs:
  test:
    # The type of runner that the job will run on
    name: final test
    runs-on:  ${{ matrix.platform }}
    strategy:
      max-parallel: 15
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.7, 3.8, 3.9]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2.2.2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install poetry
          poetry install
      - name: Test
        run: |
          poetry run black --check --diff --quiet --skip-magic-trailing-comma .
          poetry run isort --check --force-single-line-imports --quiet .
          poetry run mypy .
          poetry run pytest tests/
  
  releasetest:
    # The type of runner that the job will run on
    name: release test
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9']

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2.2.2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install poetry
        poetry install
    - name: test release
      run: |
        poetry publish --build -r testpypi --username __token__ --password ${{ secrets.TEST_PYPI_TOKEN }}
  
  releasetestcheck:
    name: release test check
    needs: releasetest
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9']

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2.2.2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install test package
        run: |
          python -m pip install -i https://test.pypi.org/simple/pytorch-extra-mhirano${GITHUB_REF##*/}
          rm -r pytorch-extra-mhirano
      - name: Test
        run: |
          poetry run black --check --diff --quiet --skip-magic-trailing-comma .
          poetry run isort --check --force-single-line-imports --quiet .
          poetry run mypy .
          poetry run pytest tests/
    
